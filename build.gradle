import org.ajoberstar.grgit.Grgit


buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'org.ajoberstar:grgit:1.7.0'
    }
}

plugins {
    id 'ninja.miserable.blossom' version '1.0.1'
    id 'org.spongepowered.plugin' version '0.8.1'
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

defaultTasks 'clean', 'build'

jar {
    manifest {
        attributes 'Main-Class': 'com.github.euonmyoji.newhonor.Main'
    }
}

def buildNumber = ""
ext {
    //代码来自插件ebi中的build.gradle → : https://github.com/euOnmyoji/EpicBanItem---Sponge
    //noinspection GrDeprecatedAPIUsage  不会用新版
    git = Grgit.open(file(".git"))
    parents = git.head().parentIds
    index = 0// Offset to match CI
    for (; parents != null && !parents.isEmpty(); index++) {
        parents = git.getResolve().toCommit(parents.get(0)).getParentIds()
    }
    //noinspection GrReassignedInClosureLocalVar
    buildNumber = "${index}"
}

blossom {
    //参考build.gradle https://github.com/ginyai/GiftCode/blob/master/build.gradle
    replaceToken('@version@', version)
}

version = "$version-b$buildNumber"

repositories {
    mavenCentral()
    maven {
        name = 'sponge'
        url = 'https://repo.spongepowered.org/maven'
    }
    maven {
        name = "nucleus"
        url = "http://repo.drnaylor.co.uk/artifactory/list/minecraft"
    }
    maven { url = 'https://raw.github.com/FabioZumbi12/UltimateChat/mvn-repo/' }
    maven { url = 'https://jitpack.io' }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

dependencies {
    compile 'org.spongepowered:spongeapi:7.0.0'
    compile 'br.net.fabiozumbi12.UltimateChat:UltimateChat-Sponge-5.0-6.0:1.8.6'
    compile 'com.github.rojo8399:PlaceholderAPI:master-SNAPSHOT'
    compile "io.github.nucleuspowered:nucleus-api:1.3.9-S7.0"
}

sourceSets {
    api {
        resources.srcDir 'com/github/euonmyoji/newhonor/api'
    }
}

//https://fmltutor.ustc-zzzz.net/3.5.2-%E5%90%91%E5%85%B6%E4%BB%96Mod%E6%8F%90%E4%BE%9BAPI.html
task apiJar(type: Jar) {
    classifier = 'api'
    from sourceSets.main.output
    from sourceSets.main.allSource
    include 'com/github/euonmyoji/newhonor/api/**'
}

artifacts {
    archives apiJar
}